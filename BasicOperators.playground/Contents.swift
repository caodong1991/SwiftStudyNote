//: Playground - noun: a place where people can play

import Cocoa

var str = "Hello, playground"

// 术语
// 运算符有一元、二元、三元运算符。受运算符影响的值叫做操作数。

// 赋值运算符
// （a = b）用b的值来初始化或更新a的值
let b = 10
var a = 5
a = b

// 如果赋值的右边是一个多元组，它的元素可以马上被分解成多个常量或变量
let (x, y) = (1, 2)
// swift的赋值操作并不返回任何值。
//if a = b { // 错误
//    
//}

// 算符运算符
// 四则算术运算：+，-，*，/
// swift默认情况下不允许在数值运算中出现溢出情况。可以使用Swift的溢出运算符来实现溢出运算（a &+ b）
// 加法运算符也可用于String的拼接

// 求余运算符（取模运算）%
// 在对负数b求余时，b的符号会被忽略。这意味着a%b和a%-b的解惑是相同的。
print(9 % -4)
print(9 % 4)
print(-9 % 4)
print(-9 % -4)

// 浮点数求余计算
print(8 % 2.5)

// 自增和自减运算
var i = 0
print(i++)
print(++i)
print(i--)
print(--i)

// 比较运算符 ==  ！=  >  <  >=  <= 
// 恒等===和不恒等！==来判断两个对象是否引用同一个对象实例

// 三目运算符
// 问题？答案1：答案2.
// 等价于
//if question {
//    answer1
//} else {
//    answer2
//}

// 空合运算符
// 空合运算符（a ?? b）将对可选类型a进行空判断，如果a包含一个值就进行解析，否则就返回一个默认值b.这个运算符有两个条件：1.表达式a必须是Optional类型。2.默认值b的类型必须要和a存储值得类型保持一致。
// 等价于 a != nil ? a! : b
// 短路：若a非空，b不会被估值

// 区间运算符
// 闭区间运算符（a...b）定义一个包含从a到b（包括a和b）的所有制的区间。闭区间运算符在迭代一个区间的所有值时是非常有用的
for index in 1...5 {
    print(index)
}

// 半开区间（a..<b）定义一个从a到b但不包含b的区间。该区间包含第一个值而不包括最后一个值。半开区间的是用性在于当你使用一个从0开始的列表的（如数组时），非常方便地从0数到列表的长度。

// 逻辑运算 操作对象是逻辑布尔值。
// 逻辑非 !a 逻辑与 a && b 逻辑或 a || b











